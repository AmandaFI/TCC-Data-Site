As artificial intelligence (AI) becomes more prevalent in the field of coding, the question of trust is increasingly important. One such tool, ChatGPT, has been used to create 3D game Skyroads despite there being no code examples available online. While some people are hesitant to adopt AI for coding due to risks of inefficiency or flaws, the technology can speed up code processes, and Brex's design lead says the tool's "contextual understanding" makes it a superior choice to search engines. However, the question remains: can computer coders trust ChatGPT?. GitHub Copilot is another AI tool that's been upgraded with features to detect and block insecure code, but CEO Thomas Dohmke notes the importance of human review. Trusting AI such as ChatGPT to write code without human intervention is not yet fully established, and some argue that there are too many risks involved in allowing machines to create the systems we rely on. ChatGPT works by generating new text rather than searching the internet for ready-made answers. This means that programmers can input a specific command, and the program will generate the necessary code, even if there is no existing example to draw from. This can be a valuable asset when working on new or innovative projects that require coding on a complex level. The potential for AI-powered coding is clear. By streamlining the coding process, it can save time and increase efficiency. This is especially significant when working on large-scale projects, where AI can take on the grunt work of repetitive coding tasks, freeing up coders to focus on more critical aspects of the project. However, AI is not without its risks. The technology is still developing, and there is always a risk of inefficiency or flaws in the code generated by machines. Moreover, as with most automated systems, the technology is only as good as the data it is trained on. If the data is incomplete or biased, the AI-generated code could be similarly compromised. Brex's design lead, for one, sees the potential benefits of ChatGPT outweighing these risks. He says that the tool's "contextual understanding" makes it a better choice than search engines. ChatGPT is designed to take context into account and tailor the code it generates accordingly. This is an important feature when working on complex projects that require coding that is specific to the context. GitHub Copilot offers similar benefits. The program has been designed to detect and block insecure code, reducing the risk of errors and vulnerabilities in the finished product. However, the company notes that human review is an integral part of their process, and they have been careful to balance the benefits of AI with the risks involved in relying on machines to generate code. Despite the clear potential for AI-powered coding to increase efficiency and reduce the time and resources required to code complex systems, there is still a long way to go before coders can fully trust the technology. Skeptics argue that the risks of allowing machines to generate code without human intervention are too great. They point to the potential for flawed code or security vulnerabilities as reasons why human oversight remains essential. Nonetheless, the benefits of AI-powered coding are clear. By reducing the time and resources required to code complex systems, AI can improve the efficiency of coding and reduce costs. As such, many companies and coders are embracing the potential of AI in the field of coding, and new AI tools are emerging all the time. The question of trust remains an essential part of this conversation. As AI becomes more integrated into the field of coding, coders will need to learn to trust the technology. This will require careful consideration of the risks and benefits of AI-powered coding, as well as a willingness to adapt to new technologies and methods of coding. For AI-powered coding to reach its full potential, coders will need to work closely with AI tools such as ChatGPT to find the right balance between human oversight and machine-generated code. The early signs are promising, and as the technology continues to develop and improve, it is likely that AI-powered coding will become an essential part of the coding process. Nonetheless, coders should remain vigilant and aware of the potential risks involved in relying on machines to generate code without human oversight.